<launch>

  	<arg name="camera_name" default="camera" />
  	<!-- video_stream_provider can be a number as a video device or a url of a video stream -->
  	<arg name="video_stream_provider" default="0" />
  	<!-- set camera fps to -->
  	<arg name="set_camera_fps" default="30" />
  	<!-- set buffer queue size of frame capturing to -->
  	<arg name="buffer_queue_size" default="100" />
  	<!-- frames per second to query the camera for -->
  	<arg name="fps" default="30" />
  	<!-- frame_id for the camera -->
  	<arg name="frame_id" default="$(arg camera_name)" />
  	<!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml
  	To use your own fill this arg with the corresponding url, e.g.:
  	"file:///$(find your_camera_package)/config/your_camera.yaml" -->
    <arg name="camera_info_url" default="file://${ROS_HOME}/camera_info/$(arg camera_name).yaml" />
  	<!-- flip the image horizontally (mirror it) -->
  	<arg name="flip_horizontal" default="false" />
  	<!-- flip the image vertically -->
  	<arg name="flip_vertical" default="false" />
    <!-- force width and height, 0 means no forcing -->
    <arg name="width" default="640"/>
    <arg name="height" default="480"/>
  	<!-- if show a image_view window subscribed to the generated stream -->
	<arg name="visualize" default="false"/>


    <!-- camera driver-->
	  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device" value="/dev/video0" />
        <param name="image_width" value="$(arg width)" />
        <param name="image_height" value="$(arg height)" />
        <param name="pixel_format" value="yuyv" />
        <param name="camera_frame_id" value="usb_cam" />
        <param name="io_method" value="mmap"/>
        <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
      </node>


    <group ns="usb_cam">
      <node name="image_proc" pkg="image_proc" type="image_proc" output="screen" >
      </node>
    </group>


    <node pkg="robot_vision" type="robot_vision" name="robot_vision"/>


</launch>